{"ast":null,"code":"/*import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.path === this.props.location.pathname && this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0)\n        }\n    }\n    render() {\n        const { component: Component, ...rest } = this.props;\n        return <Route {...rest} render={props => (<Component {...props} />)} />;\n        }\n    }\nexport default withRouter(ScrollToTop);*/\n\n/*import { useEffect} from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n    return null;\n}*/\n\n/*import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0,0)\n      }\n    }\n    render() {\n      return this.props.children\n    }\n  }\n  export default withRouter(ScrollToTop);*/\nimport { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => window.scrollTo(0, 0);\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.location !== prevProps.lcocation) window.scrollTo(0, 0);\n    };\n\n    this.render = () => this.props.children;\n  }\n\n}\n\nexport default _c = withRouter(ScrollToTop);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/thuchainz/ping-website/src/components/ScrollToTop.js"],"names":["PureComponent","withRouter","ScrollToTop","componentDidMount","window","scrollTo","componentDidUpdate","prevProps","props","location","lcocation","render","children"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAN,SAA0BF,aAA1B,CAAwC;AAAA;AAAA;;AAAA,SACtCG,iBADsC,GAClB,MAAMC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,CADY;;AAAA,SAEtCC,kBAFsC,GAEjBC,SAAS,IAAI;AAChC,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBF,SAAS,CAACG,SAAtC,EAAiDN,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAClD,KAJqC;;AAAA,SAKtCM,MALsC,GAK7B,MAAM,KAAKH,KAAL,CAAWI,QALY;AAAA;;AAAA;;AAQxC,oBAAeX,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["/*import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.path === this.props.location.pathname && this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0)\n        }\n    }\n    render() {\n        const { component: Component, ...rest } = this.props;\n        return <Route {...rest} render={props => (<Component {...props} />)} />;\n        }\n    }\nexport default withRouter(ScrollToTop);*/\n\n/*import { useEffect} from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n    return null;\n}*/\n\n/*import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0,0)\n      }\n    }\n    render() {\n      return this.props.children\n    }\n  }\n  export default withRouter(ScrollToTop);*/\n\nimport { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends PureComponent {\n  componentDidMount = () => window.scrollTo(0, 0);\n  componentDidUpdate = prevProps => {\n    if (this.props.location !== prevProps.lcocation) window.scrollTo(0, 0);\n  };\n  render = () => this.props.children;\n}\n\nexport default withRouter(ScrollToTop);"]},"metadata":{},"sourceType":"module"}